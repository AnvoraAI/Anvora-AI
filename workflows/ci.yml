name: Gradual AGENT CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        os: [ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov hypothesis mypy black flake8 bandit

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Lint with black
      run: black --check --diff --line-length 120 .

    - name: Lint with flake8
      run: flake8 --max-line-length 120 --ignore=E501,W503

    - name: Type checking with mypy
      run: mypy --strict --ignore-missing-imports --disallow-untyped-defs agents/ services/ lib/

    - name: Run unit tests
      run: pytest tests/unit/ --cov=agents --cov=services --cov-report=xml

    - name: Run integration tests
      run: pytest tests/integration/ --cov=agents --cov=services --cov-append --cov-report=xml
      if: success()

    - name: Security scan with Bandit
      run: bandit -r agents/ services/ lib/ -c pyproject.toml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install docs dependencies
      run: |
        pip install -r docs/requirements.txt
        
    - name: Build API docs
      run: |
        sphinx-apidoc -o docs/source/ agents/ services/ lib/
        sphinx-build -b html docs/source/ docs/build/

    - name: Archive documentation
      uses: actions/upload-artifact@v3
      with:
        name: gradual-agent-docs
        path: docs/build/
